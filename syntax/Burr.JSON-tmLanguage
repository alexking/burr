// [PackageDev] target_format: plist, ext: tmLanguage
// Based off of http://svn.textmate.org/trunk/Review/Bundles/JavaScript.tmbundle/Syntaxes/ (http://svn.textmate.org/trunk/LICENSE)
{ "name": "Burr",
  "scopeName": "source.burr",
  "fileTypes": ["br", "burr"],
  "uuid": "7fe2b9c7-05c7-459a-9404-80919bca4729",

    "repository": {
        "core": {
            "patterns": [
                {
                    "include": "#literal-number"
                }, 
                {
                    "include": "#literal-string"
                }, 
                {
                    "include": "#literal-regex"
                }, 
                {
                    "include": "#literal-keywords"
                }, 
                {
                    "include": "#literal-function-call"
                }, 
                {
                    "include": "#literal-function-constructor"
                }, 
                {
                    "include": "#literal-labels"
                }, 
                {
                    "include": "#literal-variable"
                }, 
                {
                    "include": "#literal-punctuation"
                }
            ]
        }, 
        "literal-string": {
            "patterns": [
                {
                    "begin": "'", 
                    "end": "(?i)'|(?=</\\s*script\\s*>\\s*\\n)|(?<=[^\\\\]\\n)", 
                    "name": "string.quoted.single.js", 
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.js"
                        }
                    }, 
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.js"
                        }
                    }, 
                    "patterns": [
                        {
                            "include": "#string-single-innards"
                        }
                    ]
                }, 
                {
                    "begin": "\"", 
                    "end": "(?i)\"|(?=</\\s*script\\s*>\\s*\\n)|(?<=[^\\\\]\\n)", 
                    "name": "string.quoted.double.js", 
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.js"
                        }
                    }, 
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.js"
                        }
                    }, 
                    "patterns": [
                        {
                            "include": "#string-double-innards"
                        }
                    ]
                }
            ]
        }, 
        "literal-function-call": {
            "patterns": [
                {
                    "patterns": [
                        {
                            "name": "entity.name.function.js", 
                            "match": "[_$a-zA-Z][_$\\w]*"
                        }
                    ], 
                    "begin": "(?=[_$a-zA-Z][_$\\w]*\\s*\\()", 
                    "end": "(?=\\()", 
                    "name": "meta.function-call.static.with-arguments.js"
                }
            ]
        }, 
        "literal-keywords": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "keyword.operator.new.js"
                        }, 
                        "2": {
                            "name": "entity.name.type.class.js"
                        }
                    }, 
                    "name": "meta.class.instance.constructor", 
                    "match": "(new)\\s+(\\w+(?:\\.\\w*)?)"
                }, 
                {
                    "name": "storage.type.js", 
                    "match": "\\b(boolean|byte|char|class|double|enum|float|function|collection|int|interface|long|short|var|void)\\b"
                }, 
                {
                    "name": "storage.modifier.js", 
                    "match": "\\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\\b"
                }, 
                {
                    "name": "keyword.control.js", 
                    "match": "\\b(break|case|catch|continue|default|do|else|finally|for|goto|if|import|package|return|switch|throw|try|while)\\b"
                }, 
                {
                    "name": "keyword.operator.js", 
                    "match": "\\b(delete|in(stanceof)?|new|typeof|void|with)\\b"
                }, 
                {
                    "name": "constant.language.boolean.true.js", 
                    "match": "\\btrue\\b"
                }, 
                {
                    "name": "constant.language.boolean.false.js", 
                    "match": "\\bfalse\\b"
                }, 
                {
                    "name": "constant.language.null.js", 
                    "match": "\\bnull\\b"
                }, 
                {
                    "name": "constant.language.null.js", 
                    "match": "\\bundefined\\b"
                }, 
                {
                    "name": "constant.language.null.js", 
                    "match": "\\bNaN\\b"
                }, 
                {
                    "name": "variable.language.js", 
                    "match": "(?<!\\.)\\b(super|this|arguments)\\b"
                }, 
                {
                    "name": "variable.language.js", 
                    "match": "(?<=\\.)\\b(prototype|constructor)\\b"
                }, 
                {
                    "disabled": 1, 
                    "name": "keyword.operator.js", 
                    "match": "!|%|&|\\*|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|\\*=|/=|%=|\\+=|\\-=|&=|\\^="
                }, 
                {
                    "disabled": 1, 
                    "name": "punctuation.separator.key-value", 
                    "match": ":"
                }, 
                {
                    "name": "keyword.operator.logical.js", 
                    "match": "(?x)\n\t\t\t\t\t!(?!=)| # logical-not     right-to-left   right\n\t\t\t\t\t&&    | # logical-and     left-to-right   both\n\t\t\t\t\t\\|\\|   # logical-or      left-to-right   both\n\t\t\t\t\t"
                }, 
                {
                    "name": "keyword.operator.assignment.augmented.js", 
                    "match": "(?x)\n\t\t\t\t\t  %= | # assignment      right-to-left   both\n\t\t\t\t\t  &= | # assignment      right-to-left   both\n\t\t\t\t\t \\*= | # assignment      right-to-left   both\n\t\t\t\t\t \\+= | # assignment      right-to-left   both\n\t\t\t\t\t  -= | # assignment      right-to-left   both\n\t\t\t\t\t  /= | # assignment      right-to-left   both\n\t\t\t\t\t \\^= | # assignment      right-to-left   both\n\t\t\t\t\t \\|= | # assignment      right-to-left   both\n\t\t\t\t\t <<= | # assignment      right-to-left   both\n\t\t\t\t\t >>= | # assignment      right-to-left   both\n\t\t\t\t\t>>>=   # assignment      right-to-left   both\n\t\t\t\t\t"
                }, 
                {
                    "name": "keyword.operator.bitwise.js", 
                    "match": "(?x)\n\t\t\t\t\t~    | # bitwise-not     right-to-left   right\n\t\t\t\t\t<<   | # bitwise-shift   left-to-right   both\n\t\t\t\t\t>>>  | # bitwise-shift   left-to-right   both\n\t\t\t\t\t>>   | # bitwise-shift   left-to-right   both\n\t\t\t\t\t&    | # bitwise-and     left-to-right   both\n\t\t\t\t\t\\^   | # bitwise-xor     left-to-right   both\n\t\t\t\t\t\\|     # bitwise-or      left-to-right   both\n\t\t\t\t\t"
                }, 
                {
                    "name": "keyword.operator.relational.js", 
                    "match": "(?x)\n\t\t\t\t\t<    | # relational      left-to-right   both\n\t\t\t\t\t>    | # relational      left-to-right   both\n\t\t\t\t\t<=   | # relational      left-to-right   both\n\t\t\t\t\t>=     # relational      left-to-right   both\n\t\t\t\t\t"
                }, 
                {
                    "name": "keyword.operator.comparison.js", 
                    "match": "(?x)\n\t\t\t\t\t===  | # equality        left-to-right   both\n\t\t\t\t\t!==  | # equality        left-to-right   both\n\t\t\t\t\t ==  | # equality        left-to-right   both\n\t\t\t\t\t!=     # equality        left-to-right   both\n\t\t\t\t\t"
                }, 
                {
                    "name": "keyword.operator.assignment.js", 
                    "match": "(?x)\n\t\t\t\t\t=     # assignment      right-to-left   both\n\t\t\t\t\t"
                }, 
                {
                    "name": "keyword.operator.arithmetic.js", 
                    "match": "(?x)\n\t\t\t\t\t--   | # decrement       n/a             right-or-left\n\t\t\t\t\t\\+\\+ | # increment       n/a             right-or-left\n\t\t\t\t\t/    | # division        left-to-right   both\n\t\t\t\t\t%    | # modulus         left-to-right   both\n\t\t\t\t\t\\*   | # multiplication  left-to-right   both\n\t\t\t\t\t\\+   | # addition        left-to-right   both\n\t\t\t\t\t-      # subtraction     left-to-right   both\n\t\t\t\t\t"
                }
            ]
        }, 
        "literal-labels": {
            "patterns": [
                {
                    "captures": {
                        "2": {
                            "name": "punctuation.separator.key-value.js"
                        }
                    }, 
                    "match": "(?<=['\"])(\\s*)(:)"
                }, 
                {
                    "captures": {
                        "1": {
                            "name": "string.unquoted.label.js"
                        }, 
                        "2": {
                            "name": "punctuation.separator.key-value.js"
                        }
                    }, 
                    "name": "constant.other.object.key.js", 
                    "match": "(?<!\\?|\\? |case )([_$a-zA-Z][_$\\w]*)\\s*(:)"
                }
            ]
        }, 
        "literal-regex": {
            "patterns": [
                {
                    "begin": "(?x)\n\t\t\t\t\t\t(?<= [\\[,=(:] | ^ | && | return )\n\t\t\t\t\t\t\\s*((/)) (?! [/*+{}?] | $ )", 
                    "end": "((/([igm]*)))|(?=</\\s*script\\s*>\\s*\\n)|(?<=[^\\\\]\\n)", 
                    "contentName": "string.regexp.js", 
                    "beginCaptures": {
                        "1": {
                            "name": "string.regexp.js"
                        }, 
                        "2": {
                            "name": "punctuation.definition.string.begin.js"
                        }
                    }, 
                    "patterns": [
                        {
                            "name": "constant.character.escape.newline.js", 
                            "match": "\\\\\\n"
                        }, 
                        {
                            "name": "invalid.illegal.newline.js", 
                            "match": "\\n"
                        }, 
                        {
                            "name": "constant.character.escape.js", 
                            "match": "\\\\."
                        }
                    ], 
                    "endCaptures": {
                        "1": {
                            "name": "string.regexp.js"
                        }, 
                        "3": {
                            "name": "keyword.other.js"
                        }, 
                        "2": {
                            "name": "punctuation.definition.string.end.js"
                        }
                    }
                }
            ]
        }, 
        "literal-function-constructor": {
            "patterns": [
                {
                    "comment": "match regular function like: function myFunc(arg) { \u2026 }", 
                    "captures": {
                        "1": {
                            "name": "storage.type.function.js"
                        }, 
                        "3": {
                            "name": "punctuation.definition.parameters.begin.js"
                        }, 
                        "2": {
                            "name": "entity.name.function.js"
                        }, 
                        "5": {
                            "name": "punctuation.definition.parameters.end.js"
                        }, 
                        "4": {
                            "name": "variable.parameter.function.js"
                        }
                    }, 
                    "name": "meta.function.js", 
                    "match": "\\b(function)(?:\\s+([a-zA-Z_$]\\w*))?\\s*(\\()(.*?)(\\))"
                }, 
                {
                    "comment": "match stuff like: Sound.prototype = { \u2026 } when extending an object", 
                    "captures": {
                        "1": {
                            "name": "support.class.js"
                        }, 
                        "2": {
                            "name": "support.constant.js"
                        }
                    }, 
                    "name": "meta.class.js", 
                    "match": "([a-zA-Z_?.$][\\w?.$]*)\\.(prototype)\\s*=\\s*"
                }, 
                {
                    "comment": "match stuff like: Sound.prototype.play = function() { \u2026 }", 
                    "captures": {
                        "1": {
                            "name": "support.class.js"
                        }, 
                        "3": {
                            "name": "entity.name.function.js"
                        }, 
                        "2": {
                            "name": "support.constant.js"
                        }, 
                        "5": {
                            "name": "punctuation.definition.parameters.begin.js"
                        }, 
                        "4": {
                            "name": "storage.type.function.js"
                        }, 
                        "7": {
                            "name": "punctuation.definition.parameters.end.js"
                        }, 
                        "6": {
                            "name": "variable.parameter.function.js"
                        }
                    }, 
                    "name": "meta.function.prototype.js", 
                    "match": "([a-zA-Z_?.$][\\w?.$]*)\\.(prototype)\\.([a-zA-Z_?.$][\\w?.$]*)\\s*=\\s*(function)?\\s*(\\()(.*?)(\\))"
                }, 
                {
                    "comment": "match stuff like: Sound.prototype.play = myfunc", 
                    "captures": {
                        "1": {
                            "name": "support.class.js"
                        }, 
                        "3": {
                            "name": "entity.name.function.js"
                        }, 
                        "2": {
                            "name": "support.constant.js"
                        }
                    }, 
                    "name": "meta.function.js", 
                    "match": "([a-zA-Z_?.$][\\w?.$]*)\\.(prototype)\\.([a-zA-Z_?.$][\\w?.$]*)\\s*=\\s*"
                }, 
                {
                    "comment": "match stuff like: Sound.play = function() { \u2026 }", 
                    "captures": {
                        "1": {
                            "name": "support.class.js"
                        }, 
                        "3": {
                            "name": "storage.type.function.js"
                        }, 
                        "2": {
                            "name": "entity.name.function.js"
                        }, 
                        "5": {
                            "name": "variable.parameter.function.js"
                        }, 
                        "4": {
                            "name": "punctuation.definition.parameters.begin.js"
                        }, 
                        "6": {
                            "name": "punctuation.definition.parameters.end.js"
                        }
                    }, 
                    "name": "meta.function.js", 
                    "match": "([a-zA-Z_?.$][\\w?.$]*)\\.([a-zA-Z_?.$][\\w?.$]*)\\s*=\\s*(function)\\s*(\\()(.*?)(\\))"
                }, 
                {
                    "comment": "match stuff like: foobar: function() { \u2026 }", 
                    "captures": {
                        "1": {
                            "name": "entity.name.function.js"
                        }, 
                        "3": {
                            "name": "storage.type.function.js"
                        }, 
                        "2": {
                            "name": "punctuation.separator.key-value.js"
                        }, 
                        "5": {
                            "name": "variable.parameter.function.js"
                        }, 
                        "4": {
                            "name": "punctuation.definition.parameters.begin.js"
                        }, 
                        "6": {
                            "name": "punctuation.definition.parameters.end.js"
                        }
                    }, 
                    "name": "meta.function.json.js", 
                    "match": "\\b([a-zA-Z_?.$][\\w?.$]*)\\s*(:)\\s*\\b(function)?\\s*(\\()(.*?)(\\))"
                }, 
                {
                    "comment": "Attempt to match \"foo\": function", 
                    "captures": {
                        "11": {
                            "name": "punctuation.definition.parameters.begin.js"
                        }, 
                        "10": {
                            "name": "storage.type.function.js"
                        }, 
                        "13": {
                            "name": "punctuation.definition.parameters.end.js"
                        }, 
                        "12": {
                            "name": "variable.parameter.function.js"
                        }, 
                        "1": {
                            "name": "string.quoted.single.js"
                        }, 
                        "3": {
                            "name": "entity.name.function.js"
                        }, 
                        "2": {
                            "name": "punctuation.definition.string.begin.js"
                        }, 
                        "5": {
                            "name": "string.quoted.double.js"
                        }, 
                        "4": {
                            "name": "punctuation.definition.string.end.js"
                        }, 
                        "7": {
                            "name": "entity.name.function.js"
                        }, 
                        "6": {
                            "name": "punctuation.definition.string.begin.js"
                        }, 
                        "9": {
                            "name": "punctuation.separator.key-value.js"
                        }, 
                        "8": {
                            "name": "punctuation.definition.string.end.js"
                        }
                    }, 
                    "name": "meta.function.json.js", 
                    "match": "(?:((')(.*?)('))|((\")(.*?)(\")))\\s*(:)\\s*\\b(function)?\\s*(\\()(.*?)(\\))"
                }
            ]
        }, 
        "support": {
            "patterns": [
                {
                    "name": "support.class.js", 
                    "match": "\\b(Anchor|Applet|Area|Array|Boolean|Button|Checkbox|Date|document|event|FileUpload|Form|Frame|Function|Hidden|History|Image|JavaArray|JavaClass|JavaObject|JavaPackage|java|Layer|Link|Location|Math|MimeType|Number|navigator|netscape|Object|Option|Packages|Password|Plugin|Radio|RegExp|Reset|Select|String|Style|Submit|screen|sun|Text|Textarea|window|XMLHttpRequest)\\b"
                }, 
                {
                    "name": "support.function.js", 
                    "match": "\\b(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|val|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack))\\b(?=\\()"
                }, 
                {
                    "name": "support.function.dom.js", 
                    "match": "\\b(s(ub(stringData|mit)|plitText|e(t(NamedItem|Attribute(Node)?)|lect))|has(ChildNodes|Feature)|namedItem|c(l(ick|o(se|neNode))|reate(C(omment|DATASection|aption)|T(Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(ntityReference|lement)|Attribute))|tabIndex|i(nsert(Row|Before|Cell|Data)|tem)|open|delete(Row|C(ell|aption)|T(Head|Foot)|Data)|focus|write(ln)?|a(dd|ppend(Child|Data))|re(set|place(Child|Data)|move(NamedItem|Child|Attribute(Node)?)?)|get(NamedItem|Element(sBy(Name|TagName)|ById)|Attribute(Node)?)|blur)\\b(?=\\()"
                }, 
                {
                    "name": "support.variable.property.js", 
                    "match": "(?<=\\.)(s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|h(istory|ost(name)?|as(h|Focus))|y|n(ext|ame(space(s|URI)|Prop))|c(haracterSet|o(ntrollers|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|X(MLDocument|SLDocument)|M(IN_VALUE|AX_VALUE)|t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|i(n(ner(Height|Width)|put)|ds|gnoreCase)|SQRT(1_2|2)|zIndex|o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|NEGATIVE_INFINITY|u(ser(Profile|Language|Agent)|niqueID|pdateInterval)|_content|p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(tocol|duct(Sub)?|mpter)|e(vious|fix)))|e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|v(isibility|endor(Sub)?|Linkcolor)|URLUnencoded|f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|P(I|OSITIVE_INFINITY)|E|whiteSpace|l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|rity|bove|Linkcolor)|r(ight(Context)?|e(sponse(XML|Text)|adyState))|global|x|m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|b(o(ttom|rder(RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image))|L(N(10|2)|OG(10E|2E)))\\b"
                }, 
                {
                    "name": "support.constant.dom.js", 
                    "match": "(?<=\\.)(s(hape|ystemId|c(heme|ope|rolling)|ta(ndby|rt)|ize|ummary|pecified|e(ctionRowIndex|lected(Index)?)|rc)|h(space|t(tpEquiv|mlFor)|e(ight|aders)|ref(lang)?)|n(o(Resize|tation(s|Name)|Shade|Href|de(Name|Type|Value)|Wrap)|extSibling|ame)|c(h(ildNodes|Off|ecked|arset)?|ite|o(ntent|o(kie|rds)|de(Base|Type)?|l(s|Span|or)|mpact)|ell(s|Spacing|Padding)|l(ear|assName)|aption)|t(ype|Bodies|itle|Head|ext|a(rget|gName)|Foot)|i(sMap|ndex|d|m(plementation|ages))|o(ptions|wnerDocument|bject)|d(i(sabled|r)|o(c(type|umentElement)|main)|e(clare|f(er|ault(Selected|Checked|Value)))|at(eTime|a))|useMap|p(ublicId|arentNode|r(o(file|mpt)|eviousSibling))|e(n(ctype|tities)|vent|lements)|v(space|ersion|alue(Type)?|Link|Align)|URL|f(irstChild|orm(s)?|ace|rame(Border)?)|width|l(ink(s)?|o(ngDesc|wSrc)|a(stChild|ng|bel))|a(nchors|c(ce(ssKey|pt(Charset)?)|tion)|ttributes|pplets|l(t|ign)|r(chive|eas)|xis|Link|bbr)|r(ow(s|Span|Index)|ules|e(v|ferrer|l|adOnly))|m(ultiple|e(thod|dia)|a(rgin(Height|Width)|xLength))|b(o(dy|rder)|ackground|gColor))\\b"
                }, 
                {
                    "name": "support.constant.dom.js", 
                    "match": "\\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\\b"
                }, 
                {
                    "name": "support.function.event-handler.js", 
                    "match": "\\bon(R(ow(s(inserted|delete)|e(nter|xit))|e(s(ize(start|end)?|et)|adystatechange))|Mouse(o(ut|ver)|down|up|move)|B(efore(cut|deactivate|u(nload|pdate)|p(aste|rint)|editfocus|activate)|lur)|S(croll|top|ubmit|elect(start|ionchange)?)|H(over|elp)|C(hange|ont(extmenu|rolselect)|ut|ellchange|l(ick|ose))|D(eactivate|ata(setc(hanged|omplete)|available)|r(op|ag(start|over|drop|en(ter|d)|leave)?)|blclick)|Unload|P(aste|ropertychange)|Error(update)?|Key(down|up|press)|Focus|Load|A(ctivate|fter(update|print)|bort))\\b"
                }
            ]
        }, 
        "special-comments-conditional-compilation": {
            "patterns": [
                {
                    "begin": "/\\*(?=@)", 
                    "end": "\\*/", 
                    "name": "comment.block.conditional.js", 
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.js"
                        }
                    }, 
                    "patterns": [
                        {
                            "include": "$base"
                        }
                    ], 
                    "endCaptures": {
                        "1": {
                            "name": "keyword.control.conditional.js"
                        }, 
                        "2": {
                            "name": "punctuation.definition.keyword.js"
                        }
                    }
                }, 
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.keyword.js"
                        }
                    }, 
                    "name": "keyword.control.conditional.js", 
                    "match": "(@)(if|elif|else|end)"
                }, 
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.keyword.js"
                        }
                    }, 
                    "name": "keyword.operator.conditional.js", 
                    "match": "(@)(cc_on|set)"
                }, 
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.js"
                        }
                    }, 
                    "name": "variable.other.conditional.js", 
                    "match": "(@)(_win32|_win16|_mac|_alpha|_x86|_mc680x0|_PowerPC|_jscript_build|_jscript_version|_jscript|_debug|_fast|[a-zA-Z]\\w+)"
                }
            ]
        }, 
        "comments": {
            "patterns": [
                {
                    "include": "#special-comments-conditional-compilation"
                }, 
                {
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.js"
                        }
                    }, 
                    "begin": "/\\*\\*", 
                    "end": "\\*/", 
                    "name": "comment.block.documentation.js"
                }, 
                {
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.js"
                        }
                    }, 
                    "begin": "/\\*", 
                    "end": "\\*/", 
                    "name": "comment.block.js"
                }, 
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.js"
                        }
                    }, 
                    "name": "comment.line.double-slash.js", 
                    "match": "(//).*$\\n?"
                }, 
                {
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.html.js"
                        }, 
                        "2": {
                            "name": "punctuation.definition.comment.html.js"
                        }
                    }, 
                    "name": "comment.block.html.js", 
                    "match": "(<!--|-->)"
                }
            ]
        }, 
        "string-single-innards": {
            "patterns": [
                {
                    "name": "constant.character.escape.js", 
                    "match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
                }, 
                {
                    "name": "constant.character.escape.newline.js", 
                    "match": "\\\\\\n"
                }, 
                {
                    "name": "invalid.illegal.newline.js", 
                    "match": "\\n"
                }, 
                {
                    "name": "invalid.deprecated.inconsistent.js", 
                    "match": "(?i)</\\s*script\\s*>"
                }
            ]
        }, 
        "string-double-innards": {
            "patterns": [
                {
                    "name": "constant.character.escape.js", 
                    "match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)"
                }, 
                {
                    "name": "constant.character.escape.newline.js", 
                    "match": "\\\\\\n"
                }, 
                {
                    "name": "invalid.illegal.newline.js", 
                    "match": "\\n"
                }, 
                {
                    "name": "invalid.deprecated.inconsistent.js", 
                    "match": "(?i)</\\s*script\\s*>"
                }
            ]
        }, 
        "literal-punctuation": {
            "patterns": [
                {
                    "name": "punctuation.terminator.statement.js", 
                    "match": "\\;"
                }, 
                {
                    "name": "meta.delimiter.object.comma.js", 
                    "match": ","
                }, 
                {
                    "name": "meta.delimiter.method.period.js", 
                    "match": "\\."
                }, 
                {
                    "name": "meta.brace.curly.js", 
                    "match": "\\{|\\}"
                }, 
                {
                    "name": "meta.brace.round.js", 
                    "match": "\\(|\\)"
                }, 
                {
                    "name": "meta.brace.square.js", 
                    "match": "\\[|\\]"
                }, 
                {
                    "name": "meta.complete.method", 
                    "match": "(?<=\\.)\\s"
                }
            ]
        }, 
        "literal-variable": {
            "patterns": [
                {
                    "name": "variable.other.object.js", 
                    "match": "(?<!\\.)[_$a-zA-Z][_$\\w]*\\s*(?=[\\[\\.])"
                }, 
                {
                    "captures": {
                        "1": {
                            "name": "variable.other.object.js"
                        }, 
                        "0": {
                            "name": "meta.property-name.js"
                        }
                    }, 
                    "name": "meta.property.js", 
                    "match": "([_$a-zA-Z][_$\\w]*)\\s*(?=[\\[\\.])"
                }, 
                {
                    "captures": {
                        "0": {
                            "name": "variable.other.property.js"
                        }
                    }, 
                    "name": "meta.property.js", 
                    "match": "(?<=[\\.\\]])\\s*[_$a-zA-Z][_$\\w]*"
                }, 
                {
                    "name": "variable.other.readwrite.js", 
                    "match": "[_$a-zA-Z][_$\\w]*"
                }
            ]
        }, 
        "sugar": {
            "patterns": [
                {
                    "patterns": [
                        {
                            "captures": {
                                "11": {
                                    "name": "meta.odd-tab.group11.spaces"
                                }, 
                                "10": {
                                    "name": "meta.even-tab.group10.spaces"
                                }, 
                                "1": {
                                    "name": "meta.odd-tab.group1.spaces"
                                }, 
                                "3": {
                                    "name": "meta.odd-tab.group3.spaces"
                                }, 
                                "2": {
                                    "name": "meta.even-tab.group2.spaces"
                                }, 
                                "5": {
                                    "name": "meta.odd-tab.group5.spaces"
                                }, 
                                "4": {
                                    "name": "meta.even-tab.group4.spaces"
                                }, 
                                "7": {
                                    "name": "meta.odd-tab.group7.spaces"
                                }, 
                                "6": {
                                    "name": "meta.even-tab.group6.spaces"
                                }, 
                                "9": {
                                    "name": "meta.odd-tab.group9.spaces"
                                }, 
                                "8": {
                                    "name": "meta.even-tab.group8.spaces"
                                }
                            }, 
                            "match": "(    )(    )?(    )?(    )?(    )?(    )?(    )?(    )?(    )?(    )?(    )?"
                        }, 
                        {
                            "captures": {
                                "11": {
                                    "name": "meta.odd-tab.group11.tab"
                                }, 
                                "10": {
                                    "name": "meta.even-tab.group10.tab"
                                }, 
                                "1": {
                                    "name": "meta.odd-tab.group1.tab"
                                }, 
                                "3": {
                                    "name": "meta.odd-tab.group3.tab"
                                }, 
                                "2": {
                                    "name": "meta.even-tab.group2.tab"
                                }, 
                                "5": {
                                    "name": "meta.odd-tab.group5.tab"
                                }, 
                                "4": {
                                    "name": "meta.even-tab.group4.tab"
                                }, 
                                "7": {
                                    "name": "meta.odd-tab.group7.tab"
                                }, 
                                "6": {
                                    "name": "meta.even-tab.group6.tab"
                                }, 
                                "9": {
                                    "name": "meta.odd-tab.group9.tab"
                                }, 
                                "8": {
                                    "name": "meta.even-tab.group8.tab"
                                }
                            }, 
                            "match": "(\\t)(\\t)?(\\t)?(\\t)?(\\t)?(\\t)?(\\t)?(\\t)?(\\t)?(\\t)?(\\t)?"
                        }
                    ], 
                    "begin": "^(?=(\\t|  ))", 
                    "end": "(?=[^\\t\\s])", 
                    "name": "meta.leading-tabs"
                }
            ]
        }, 
        "special": {
            "patterns": [
                {
                    "name": "entity.name.type.object.js.firebug", 
                    "match": "\\b(console)\\b"
                }, 
                {
                    "name": "support.function.js.firebug", 
                    "match": "\\.(warn|info|log|error|time|timeEnd|assert)\\b"
                }, 
                {
                    "name": "keyword.other.js", 
                    "match": "\\b(debugger)\\b"
                }
            ]
        }, 
        "literal-number": {
            "patterns": [
                {
                    "name": "invalid.illegal.numeric.hex.js", 
                    "match": "(?i)(?:\\B[-+]|\\b)0x[0-9a-f]*\\.(\\B|\\b[0-9]+)"
                }, 
                {
                    "name": "invalid.illegal.numeric.octal.js", 
                    "match": "(?:\\B[-+]|\\b)0[0-9]+\\.(\\B|\\b[0-9]+)"
                }, 
                {
                    "name": "constant.numeric.js", 
                    "match": "(?xi)(?:\\B[-+])?(?:\n\t\t\t\t\t \\b0x[0-9a-f]* # HEX\n\t\t\t\t\t|(          \\B\\.[0-9]+   # EG:    .999\n\t\t\t\t\t  | \\b[0-9]+ (\\.[0-9]*)? # EG: 999.999 or 999. or 999 \n\t\t\t\t\t )(e[-+]?[0-9]+)?        # EG: e+123 or E-123\n\t\t\t\t\t)"
                }, 
                {
                    "name": "constant.language.js", 
                    "match": "(?:\\B[-+]|\\b)(Infinity)\\b"
                }
            ]
        }
    }, 
    "patterns": [
        {
            "include": "#comments"
        }, 
        {
            "include": "#support"
        }, 
        {
            "include": "#core"
        }, 
        {
            "include": "#special"
        }, 
        {
            "include": "#sugar"
        }
    ]

}