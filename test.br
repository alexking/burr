
// Collection object 
// You can mixin other collections as well using mixin 
collection TestClass mixin Funky, Fresh { 

	// Define variables outside of the constructor 
	var cat = "tonks";

	// Optionally define a constructor (same name as collection)
	function TestClass (a) {
		console.log(a);
	}

	// Easily define functions 
	function test() {
		
		// You can use functions from mixins 
		if (this.funk()) {

			console.log("We are totally very funky");

		} else {

			console.log("maybe not so funky");

		}
	}

	function test2(num) {

		var functions_can_have_variables_too = true;

		console.log("Hi, I'm test " + num);
		console.log("Our cat is " + this.cat);
		console.log("Is it fresh? " + (this.isFresh() ? "Yes" : "No") );
	}

	// You can use variables from mixins 
	function isFresh() {
		return test.freshness > 2;
	}

	// You can use annonymous functions
	function yesYouCan() {

		// To a variable 
		var weHope = function() {
			console.log("Hi!");
		};

		// As a callback 
		normal(function () {
			
		});

		// Named
		var test = function TestThisCase() {

		};

		weHope();

	}


}

// Collections to mix in
collection Funky {
	
	function funk() {
		return true; 
	}

}

collection Fresh {

	var freshness = 5; 

}

// Normal javascript works normally
justsomerandom = "code"; 

function testTime() {
	
}

// Instantiate and use!
var test = new TestClass("Hello world!"); 

test.test2(1);
test.test();

